---
# Tasks for managing individual users

- name: Validate required user parameters
  ansible.builtin.assert:
    that:
      - current_user.username is defined
      - current_user.username | string
    fail_msg: "Username must be defined for each user"
    
- name: Set user variables with defaults
  ansible.builtin.set_fact:
    user_state: "{{ current_user.state | default('present') }}"
    user_shell: "{{ current_user.shell | default('/bin/bash') }}"
    user_home: "{{ current_user.home | default('/home/' + current_user.username) }}"
    user_generate_ssh_key: "{{ current_user.generate_ssh_key | default(false) }}"
    user_append_groups: "{{ current_user.append_groups | default(true) }}"
    user_groups: "{{ current_user.groups | default([]) }}"
    user_home_mode: "{{ current_user.home_mode | default('0750') }}"
    user_public_html: "{{ current_user.public_html | default(false) }}"
    user_public_html_mode: "{{ current_user.public_html_mode | default('0755') }}"
    user_system: "{{ current_user.system | default(false) }}"

- name: Ensure groups exist
  ansible.builtin.group:
    name: "{{ item }}"
    state: present
  loop: "{{ user_groups }}"
  when: 
    - user_groups is defined
    - user_groups | length > 0
  tags: ['user_creation']

- name: Manage user account
  ansible.builtin.user:
    name: "{{ current_user.username }}"
    state: "{{ user_state }}"
    shell: "{{ user_shell }}"
    home: "{{ user_home }}"
    system: "{{ user_system }}"
    groups: "{{ user_groups }}"
    append: "{{ user_append_groups }}"
    generate_ssh_key: "{{ user_generate_ssh_key }}"
    create_home: true
  register: user_creation
  notify: "reload ssh service"
  tags: ['user_creation']
- name: Manage user account
  ansible.builtin.user:
    name: "{{ current_user.username }}"
    state: "{{ user_state }}"
    shell: "{{ user_shell }}"
    home: "{{ user_home }}"
    system: "{{ user_system }}"
    groups: "{{ user_groups }}"
    append: "{{ user_append_groups }}"
    generate_ssh_key: "{{ user_generate_ssh_key }}"
    create_home: true
  register: user_creation
  notify: "reload ssh service"
  tags: ['user_creation']

- name: Configure user home directory
  ansible.builtin.file:
    path: "{{ user_home }}"
    mode: "{{ user_home_mode }}"
    owner: "{{ current_user.username }}"
    group: "{{ current_user.username }}"
    state: directory
  when: user_state == 'present'
  tags: ['home']

- name: Create public_html directory
  ansible.builtin.file:
    path: "{{ user_home }}/public_html"
    mode: "{{ user_public_html_mode }}"
    owner: "{{ current_user.username }}"
    group: "{{ current_user.username }}"
    state: directory
  when: 
    - user_state == 'present'
    - user_public_html | bool
  tags: ['home']

- name: Configure sudo access
  ansible.builtin.include_tasks: sudo_user.yml
  when:
    - user_state == 'present'
    - current_user.sudo is defined
    - current_user.sudo.enabled | default(false) | bool
  tags: ['sudo']

- name: Configure SSH for user
  ansible.builtin.include_tasks: ssh.yml
  when:
    - user_state == 'present'
    - current_user.ssh is defined
    - current_user.ssh.enabled | default(true) | bool
  tags: ['ssh']
